一、创建数组
	> 数组是一个固定长度的，包含了相同类型数据的 容器
	1、声明数组
		> int [] a;
	2、创建数组
		> 创建数组的时候，要指明数组的长度。 
		> 创建数组两种方式
		1) 先声明一个引用a，再创建一个长度是5的数组，并使用引用a指向该数组；int[] a;a = new int[5];
		2) 声明引用的同时，指向一个数组 int[]b = new int[5]; 
	3、访问数组
	4、数组长度
		> .length属性用于访问一个数组的长度
		> 数组访问下标范围是0到长度-1，一旦超过这个范围,就会产生数组下标越界异常
二、初始化数组
	1、分配空间与赋值分步进行    
		1) int[] a = new int[2]; //分配了长度是5的数组，但是没有赋值
		2) a[0] = 100; a[1] = 101;//进行赋值
	2、分配空间，同时赋值(两种写法)
		1） int[] a = new int[]{1, 2, 3, 4, 5}; //分配空间同时赋值
		2） int[] b = {1, 2, 3, 4, 5}; //省略了new int[],效果一样
三、排序
	1、选择排序
	2、冒泡排序
四、增强型for循环
	> for (int each : values) {}
五、复制数组
	> 数组的长度是不可变的，一旦分配好空间，不能增加也不能减少
	>  System.arraycopy(src, srcPos, dest, destPos, length)
六、二维数组
	1、初始化二维数组
		> int[][] a = new int[2][3]; //有两个一维数组，每个一维数组的长度是3
		> int[][] b = new int[2][];  //只分配了二维数组，有两个一维数组，每个一维数组的长度暂未分配；
		   b[0]  = new int[3]; //必须事先分配长度，才可以访问
		> int[][] c = new int[][]{ {1,2,4},{4,5},{6,7,8,9}}; //指定内容的同时，分配空间
七、Arrays
	> Arrays是针对数组的工具类，可以进行 排序，查找，复制填充等功能
	1、数组复制
		> 与使用System.arraycopy进行数组复制类似,不同的是System.arraycopy，需要事先准备好目标数组，并分配长度。 
		   copyOfRange 只需要源数组就就可以了，通过返回值，就能够得到目标数组了。
		> 注意的是 copyOfRange 的第3个参数，表示源数组的结束位置，是取不到的。
	2、转换为字符串
		> Arrays提供了一个toString()方法，直接把一个数组，转换为字符串：Arrays.toString(a);
	3、排序
		> Arrays.sort(a);
	4、搜索
		> 需要注意的是，使用binarySearch进行查找之前，必须使用sort进行排序
		> 如果数组中有多个相同的元素，查找结果是不确定的
		> System.out.println("数字 62出现的位置:"+Arrays.binarySearch(a, 62));
	5、判断是否相同
		> Arrays.equals(a, b) //比较两个数组的内容是否一样
	6、填充
		> Arrays.fill(a, 5); //使用同一个值，填充整个数组