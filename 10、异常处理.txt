1、什么是异常
	> 导致程序的正常流程被中断的事件，叫做异常
	1) 文件不存在异常
2、处理
	> 常见处理手段：try catch finally throws
	1) try catch
		1.将可能抛出异常的代码放到try里
		2.如果程序不出现异常，就会顺序往下执行，并且不执行catch块的代码
		3.如果程序出现了异常，try里的代码会立即终止，程序流程会运行到catch块中
	2) 使用异常的父类进行catch
		> FileNotFoundException是Exception的子类，使用Exception也可以catch住FileNotFoundException
	3) 多异常捕捉办法1
		> 多种异常分别进行catch
		例：
			catch (FileNotFoundException e) {
			} catch (ParseException e) {
			}
	4) 多异常捕捉办法2
		> 把多个异常，放在一个catch里统一捕捉
		> 好处是捕捉的代码更紧凑，不足之处是，一旦发生异常，不能确定到底是哪种异常，需要通过instanceof 进行判断具体的异常类型
		例：catch (FileNotFoundException | ParseException e) {
				if (e instanceof FileNotFoundException)
					System.out.println("d:/LOL.exe不存在");
				if (e instanceof ParseException)
					System.out.println("日期格式解析错误");
			}
	5) finally
		> 无论是否出现异常，finally中的代码都会被执行
	6) throws
		> 程序有异常出现，两种处理方式：1、用try、catch处理；2、throws抛出去让调用它的方法来处理
			例： 主方法调用method1
				method1调用method2
				method2中打开文件
			method2中需要进行异常处理 但是method2不打算处理，而是把这个异常通过throws抛出去
			那么method1就会接到该异常。 处理办法也是两种，要么是try catch处理掉，要么也是抛出去。
			method1选择本地try catch住 一旦try catch住了，就相当于把这个异常消化掉了，主方法在调用method1的时候，就不需要进行异常处理了
			如果method1也选择throws抛出去，那么主方法就会接到该异常，主方法也可以try catch或者继续throws出去
	7) throw和throws的区别：
		1. throws 出现在方法声明上，而throw通常都出现在方法体内。
		2. throws 表示出现异常的一种可能性，并不一定会发生这些异常；throw则是抛出了异常，执行throw则一定抛出了某个异常对象。
3、异常分类
	> 包括可查异常 和 非可查异常(包括运行时异常和错误)
	1) 可查异常 CheckedException
		> 必须进行处理的异常，要么try catch，要么往外抛。谁调用，谁处理；
		比如 FileNotFoundException，如果不处理，编译不能通过
	2) 运行时异常
		> 运行时异常RuntimeException指： 不是必须进行try catch的异常
		> 常见运行时异常：
			1.除数不能为0异常：ArithmeticException
			2.数组下标越界异常：ArrayIndexOutOfBoundsException
			3.空指针异常：NullPointerException
		> 运行时异常，可以使用try catch throws进行处理；但如果不try catch throws，什么都不做，也不会有编译错误
		Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
	3) 错误 Error
		> 错误指系统级别的异常，通常是内存用光了：抛出OutOfMemoryError
		> 与运行时异常一样，可以捕捉，也是不要求强制捕捉的
	4) 三种分类
		> 总体上异常分为三类：
			1.错误
			2.运行时异常
			3.可查异常
4、Throwable
	> Throwable是类，Exception和Error都继承了该类，所以在捕捉异常时，也可以用Throwable进行捕捉
	> 异常Throwable分为Error和Exception；Exception又分为运行时异常和可查异常
5、自定义异常
	1) 创建自定义异常
		> 自定义异常类要继承Exception类
	2) 抛出自定义异常
		> 分3步：
			1.创建异常实例
			2.通过throw抛出该异常实例
			3.当前方法通过throws抛出该异常
	3) 捕捉自定义异常
		1.对调用抛出自定义异常的方法进行try catch
		2.catch里使用自定义异常类来处理异常
